#
#############################     Example of file with list of cuts
#
#
#------------------------ Preliminary cut variables and values (cut level -1) here -----------------------------
# This first list of variable names and values are used to pass configurable values to the user code associated 
# to a variable name.
# The user can retrieve the values associated to a variable name via a provided function call
# [e.g. getPreCutValue1("jetFidRegion") and similarly for value2, value3 and value4 ]
# The idea is that the user can use these values to define the list of objects (electrons, jets, etc.) used in 
# analysis. No cut is automatically evaluated on these variables and the cut level must be equal to -1. 
# Variable names must be unique.
#
#VariableName                   value1		value2		value3		value4		level
#------------			------------	-------------	------------	-------------	-----
produceSkim                     0               -               -               -               -1
produceReducedSkim              0               -               -               -               -1
jetFidRegion			2.5		-		-		-		-1	
jetPtCut			30.		-		-		-		-1	
looseJetID                      1               -               -               -               -1
#
#
#--------------------------------- Cuts (level 0,1,2,3 ... n) below --------------------------------------------
# The cut variable names, cut boundaries and histogram binnings are provided here by the user.
# In the event loop of the analysisClass_template.C, the user have to fill each variable with its value using
# a provided function call [ e.g. fillVariableWithValue("nEleFinal", number_of_electrons) ]
# The variable names in the user code has to match the names provided here.
# Variable names must be unique.
# The cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 ) 
# in case only the first range (minValue1, maxValue1) is provided, 
# otherwise the cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 )  OR  ( minValue2 < VariableName <= maxValue2 )
# in case even the second range (minValue2, maxValue2) is provided.
# The level of the cut (0,1,2 ... n) is provided by the user and can be used in the code to easily determine if
# groups of same-level cuts have passed or failed.
#
#VariableName	      minValue1(<) maxValue1(>=)	minValue2(<)	maxValue2(>=)	level	histoNbinsMinMax  OptionalFlag
#------------	      ------------ -------------	------------	-------------	-----	----------------  ------------
jetIdT1                  0.5            1.5                 -               -               1       2  0 2.	  SAVE
jetIdT2                  0.5            1.5                 -               -               1       2  0 2.	  SAVE
nVtx                  1            +inf                 -               -               1       50  0 50	  SAVE
nJetFinal	      1		   +inf			-		-		0	31 -0.5 30.5      SAVE
pT1stJet	      30	   +inf			-	        -	        1	500 0 5000        SAVE
pT2ndJet	      30	   +inf			-	        -	        1	500 0 5000        SAVE
eta1stJet            -2.5           2.5                 -               -               1       5  -2.5 2.5       SAVE
eta2ndJet            -2.5           2.5                 -               -               1       5  -2.5 2.5       SAVE
deltaETAjj            0             1.3                 -               -               1       120 0. 3.         SAVE
Dijet_MassW	      890          +inf			-	        -	        1	10000 0 10000        SAVE


# no cut on these variables, just want to save histograms
Dijet_MassAK8         -inf         +inf                 -               -               1	10000 0 10000        SAVE
Dijet_MassAK4         -inf         +inf                 -               -               1	10000 0 10000        SAVE
#Dijet_MassC          -inf         +inf                 -               -               1	10000 0 10000        SAVE
ptHat                                   -inf            +inf                 -               -               1       500 0 10000       SAVE
neutralHadronEnergyFraction_j1          -inf            +inf                 -               -               1       500 0 1       SAVE
photonEnergyFraction_j1                 -inf            +inf                 -               -               1       500 0 1       SAVE
electronEnergyFraction_j1               -inf            +inf                 -               -               1       500 0 1       SAVE
muonEnergyFraction_j1                   -inf            +inf                 -               -               1       500 0 1       SAVE
chargedHadronMultiplicity_j1            -inf            +inf                 -               -               1       20 0 20       SAVE
neutralHadronEnergyFraction_j2          -inf            +inf                 -               -               1       500 0 1       SAVE
photonEnergyFraction_j2                 -inf            +inf                 -               -               1       500 0 1       SAVE
electronEnergyFraction_j2               -inf            +inf                 -               -               1       500 0 1       SAVE
muonEnergyFraction_j2                   -inf            +inf                 -               -               1       500 0 1       SAVE
chargedHadronMultiplicity_j2            -inf            +inf                 -               -               1       20 0 20       SAVE

