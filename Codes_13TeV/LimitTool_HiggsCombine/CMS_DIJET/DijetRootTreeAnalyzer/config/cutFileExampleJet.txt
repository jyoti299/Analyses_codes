#
#############################     Example of file with list of cuts
#
#
#------------------------ Preliminary cut variables and values (cut level -1) here -----------------------------
# This first list of variable names and values are used to pass configurable values to the user code associated 
# to a variable name.
# The user can retrieve the values associated to a variable name via a provided function call
# [e.g. getPreCutValue1("jetFidRegion") and similarly for value2, value3 and value4 ]
# The idea is that the user can use these values to define the list of objects (electrons, jets, etc.) used in 
# analysis. No cut is automatically evaluated on these variables and the cut level must be equal to -1. 
# Variable names must be unique.
#
#VariableName                   value1		value2		value3		value4		level
#------------			------------	-------------	------------	-------------	-----
produceSkim                     0               -               -               -               -1
produceReducedSkim              1               -               -               -               -1
jetFidRegion			2.5		-		-		-		-1	
tightJetID                      1               -               -               -               -1
pt0Cut				60		-		-		-		-1
pt1Cut				30		-		-		-		-1
ptCut				30		-		-		-		-1
deltaEtaCut			1.3		-		-		-		-1
DeltaR				1.1		-		-		-		-1
#
#
#--------------------------------- Cuts (level 0,1,2,3 ... n) below --------------------------------------------
# The cut variable names, cut boundaries and histogram binnings are provided here by the user.
# In the event loop of the analysisClass_template.C, the user have to fill each variable with its value using
# a provided function call [ e.g. fillVariableWithValue("nEleFinal", number_of_electrons) ]
# The variable names in the user code has to match the names provided here.
# Variable names must be unique.
# The cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 ) 
# in case only the first range (minValue1, maxValue1) is provided, 
# otherwise the cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 )  OR  ( minValue2 < VariableName <= maxValue2 )
# in case even the second range (minValue2, maxValue2) is provided.
# The level of the cut (0,1,2 ... n) is provided by the user and can be used in the code to easily determine if
# groups of same-level cuts have passed or failed.
#
#VariableName	      minValue1(<) maxValue1(>=)	minValue2(<)	maxValue2(>=)	level	histoNbinsMinMax  OptionalFlag
#------------	      ------------ -------------	------------	-------------	-----	----------------  ------------
jetIdT1                  0.5            1.5                 -               -               1       2  0 2.	  SAVE
jetIdT2                  0.5            1.5                 -               -               1       2  0 2.	  SAVE
nVtx                  1            +inf                 -               -               1       50  0 50	  SAVE
trueVtx		      1	   +inf			-		-		1	50  0 50	  SAVE
nJetFinal	      1		   +inf			-		-		0	31 -0.5 30.5      SAVE
pT1stJet	      60	   +inf			-	        -	        1	500 0 5000        SAVE
pT2ndJet	      30	   +inf			-	        -	        1	500 0 5000        SAVE
eta1stJet            -2.5           2.5                 -               -               1       5  -2.5 2.5       SAVE
eta2ndJet            -2.5           2.5                 -               -               1       5  -2.5 2.5       SAVE
deltaETAjj            0             1.3                 -               -               1       120 0. 3.         SAVE


# no cut on these variables, just want to save histograms
#Dijet_MassAK4      			  0             +inf                 -               -               1	     10000 0 10000   SAVE
Dijet_MassW	    			  0		+inf			-	        -	     1	     1000 0 10000    SAVE
Dijet_MassA         			  0             +inf                 -               -               1	     1000 0 10000    SAVE
Dijet_MassC         			  0             +inf                 -               -               1	     1000 0 10000    SAVE
ptHat                                   -inf            +inf                 -               -               1       500 0 10000     SAVE
deltaPHIjj 				-inf 		+inf 		- 			- 		1 200 -3.15 3.15 SAVE
phi_j1 					-inf 		+inf 		- - 1 200 -3.15 3.15 SAVE
neutrHadEnFrac_j1 			-inf 		+inf		 - - 1 100 0 1 SAVE
chargedHadEnFrac_j1 			-inf 		+inf 		- - 1 100 0 1 SAVE
photonEnFrac_j1 			-inf 		+inf 		- - 1 100 0 1 SAVE
eleEnFract_j1 				-inf 		+inf 		- - 1 100 0 1 SAVE
muEnFract_j1 				-inf 		+inf 		- - 1 100 0 1 SAVE
phi_j2 					-inf 		+inf 		- - 1 200 -3.15 3.15 SAVE
neutrHadEnFrac_j2 			-inf 		+inf 		- - 1 100 0 1 SAVE
chargedHadEnFrac_j2 			-inf 		+inf 		- - 1 100 0 1 SAVE
photonEnFrac_j2 			-inf 		+inf 		- - 1 100 0 1 SAVE
eleEnFract_j2 				-inf 		+inf 		- - 1 100 0 1 SAVE
muEnFract_j2 				-inf 		+inf 		- - 1 100 0 1 SAVE


