#!/usr/bin/env python
import sys, os, subprocess, string, re
from ROOT import *
from array import array

gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.045, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.045, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
t_m = 0.06  ##top margin
b_m = 0.11   ##botton margin
l_m = 0.115  ##left margin
r_m = 0.04  ##right margin
gStyle.SetPadTopMargin(t_m)
gStyle.SetPadBottomMargin(b_m)
gStyle.SetPadLeftMargin(l_m)
gStyle.SetPadRightMargin(r_m)
gROOT.ForceStyle()

masses_gev = array('d', [1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 1700.0, 1750.0, 1800.0, 1850.0, 1900.0, 1950.0, 2000.0, 2050.0, 2100.0, 2150.0, 2200.0, 2250.0, 2300.0, 2350.0, 2400.0, 2450.0, 2500.0, 2550.0, 2600.0, 2650.0, 2700.0, 2750.0, 2800.0, 2850.0, 2900.0, 2950.0, 3000.0, 3050.0, 3100.0, 3150.0, 3200.0, 3250.0, 3300.0, 3350.0, 3400.0, 3450.0, 3500.0, 3550.0, 3600.0, 3650.0, 3700.0, 3750.0, 3800.0, 3850.0, 3900.0, 3950.0, 4000.0, 4050.0, 4100.0, 4150.0, 4200.0, 4250.0, 4300.0, 4350.0, 4400.0, 4450.0, 4500.0, 4550.0, 4600.0, 4650.0, 4700.0, 4750.0, 4800.0, 4850.0, 4900.0, 4950.0, 5000.0, 5050.0, 5100.0, 5150.0, 5200.0, 5250.0, 5300.0, 5350.0, 5400.0])

masses_tev = array('d', [ 0.001 * float(b) for b in masses_gev ])

xs_obs_limits_dijet = array('d', [0.0710387, 0.0544579, 0.0498107, 0.049064, 0.0450077, 0.0347116, 0.0270822, 0.0222348, 0.0209322, 0.0206801, 0.0203448, 0.0187709, 0.0167815, 0.0146247, 0.0133098, 0.015223, 0.0193618, 0.026177, 0.0289087, 0.028885, 0.0265733, 0.0239484, 0.0183791, 0.0114633, 0.00908403, 0.00920361, 0.00944507, 0.00935624, 0.00878377, 0.00768314, 0.00641148, 0.00505224, 0.00401972, 0.00336278, 0.00322418, 0.00313116, 0.00308772, 0.00306355, 0.00304562, 0.0030375, 0.00302092, 0.0030205, 0.00303194, 0.0029957, 0.00295124, 0.00281804, 0.00260661, 0.0024667, 0.00228293, 0.00216394, 0.00204812, 0.00191623, 0.00172683, 0.00163221, 0.00157458, 0.00152753, 0.00153858, 0.00145799, 0.00144037, 0.00141822, 0.00141855, 0.00140098, 0.00138484, 0.00136278, 0.00135049, 0.00133766, 0.00132703, 0.00131843, 0.00130914, 0.00130124, 0.00129379, 0.00128608, 0.00127839, 0.00127258, 0.00128071, 0.0012742, 0.00126986, 0.00133649, 0.00133183, 0.00132625, 0.00127463, 0.0012713, 0.00133824, 0.00133366, 0.00132941, 0.00132593, 0.00132211, 0.00131846, 0.0013149])

xs_obs_limits_dijet_fb = array('d', [1000.0 * float(b) for b in xs_obs_limits_dijet ])

#Without JER syst
#xs_obs_limits_combine = array('d', [0.0696473, 0.0502300, 0.0456177, 0.0452231, 0.0433261, 0.0329582, 0.0243978, 0.0211668, 0.0202987, 0.0204043, 0.0202646, 0.0196727, 0.0166370, 0.0132319, 0.0121652, 0.0136476, 0.0175589, 0.0264559, 0.0308140, 0.0308898, 0.0274982, 0.0249747, 0.0176676, 0.0091384, 0.0077985, 0.0088560, 0.0093860, 0.0094015, 0.0088305, 0.0077194, 0.0061878, 0.0047552, 0.0036286, 0.0029986, 0.0027598, 0.0027784, 0.0028290, 0.0028305, 0.0027972, 0.0027726, 0.0027020, 0.0027498, 0.0028422, 0.0028466, 0.0027918, 0.0026645, 0.0024934, 0.0022758, 0.0020208, 0.0017867, 0.0016002, 0.0014515, 0.0013452, 0.0012635, 0.0012068, 0.0011595, 0.0011242, 0.0010946, 0.0010688, 0.0010454, 0.0010360, 0.0010172, 0.0010008, 0.0009860, 0.0009721, 0.0009548, 0.0009387, 0.0009265, 0.0009150, 0.0009045, 0.0008946, 0.0008844, 0.0008758, 0.0008688, 0.0008621, 0.0008562, 0.0008500, 0.0008453, 0.0008394, 0.0008334, 0.0008480, 0.0008432, 0.0008381, 0.0008339, 0.0008304, 0.0008270, 0.0008240, 0.0008215, 0.0008201])

#With JER syst
xs_obs_limits_combine = array('d', [0.0706342, 0.0509417, 0.0462955, 0.0459095, 0.0439507, 0.0334261, 0.0247138, 0.0214387, 0.0205265, 0.0206777, 0.0205360, 0.0200152, 0.0168612, 0.0133981, 0.0123138, 0.0138323, 0.0178604, 0.0271408, 0.0317015, 0.0318098, 0.0283460, 0.0257019, 0.0180857, 0.0092619, 0.0079105, 0.0090115, 0.0095550, 0.0095883, 0.0090260, 0.0078656, 0.0062841, 0.0048174, 0.0036707, 0.0030326, 0.0027913, 0.0028110, 0.0028636, 0.0028657, 0.0028319, 0.0028072, 0.0027359, 0.0027860, 0.0028825, 0.0028888, 0.0028339, 0.0027032, 0.0025266, 0.0023031, 0.0020456, 0.0018069, 0.0016161, 0.0014659, 0.0013586, 0.0012760, 0.0012187, 0.0011709, 0.0011352, 0.0011052, 0.0010791, 0.0010554, 0.0010459, 0.0010268, 0.0010103, 0.0009953, 0.0009812, 0.0009637, 0.0009504, 0.0009352, 0.0009235, 0.0009129, 0.0009028, 0.0008925, 0.0008838, 0.0008767, 0.0008699, 0.0008640, 0.0008576, 0.0008530, 0.0008469, 0.0008409, 0.0008556, 0.0008508, 0.0008457, 0.0008414, 0.0008378, 0.0008344, 0.0008313, 0.0008287, 0.0008274])

xs_obs_limits_combine_fb = array('d', [1000.0 * float(b) for b in xs_obs_limits_combine ])

xs_exp_limits_dijet = array('d', [0.0776861, 0.0670369, 0.0587668, 0.0498317, 0.0424064, 0.0366065, 0.0343897, 0.0322773, 0.0317962, 0.0310524, 0.0289195, 0.0265281, 0.0233473, 0.0213742, 0.0192989, 0.0172573, 0.0164396, 0.014932, 0.0135437, 0.0127023, 0.0113607, 0.0102652, 0.00959864, 0.00903525, 0.00854879, 0.00807415, 0.00768018, 0.00714015, 0.00697542, 0.00655953, 0.00603585, 0.00556186, 0.00502038, 0.00478013, 0.00468099, 0.00439007, 0.00420592, 0.00402361, 0.00382271, 0.00364334, 0.00349395, 0.00323566, 0.00309087, 0.00288173, 0.00271595, 0.00269409, 0.00249161, 0.00240572, 0.00232868, 0.00223963, 0.00218129, 0.00200367, 0.00195128, 0.00195357, 0.00191674, 0.00183105, 0.00179133, 0.0017206, 0.00168091, 0.00165086, 0.00162546, 0.00157396, 0.00154913, 0.00153824, 0.00151803, 0.00149212, 0.00145583, 0.00142759, 0.00142042, 0.00138953, 0.00140017, 0.00137994, 0.00136687, 0.00136222, 0.00135294, 0.00133468, 0.00133733, 0.00133068, 0.00131792, 0.00130908, 0.0013345, 0.00133915, 0.00131418, 0.00132236, 0.00130622, 0.00130613, 0.00129918, 0.00129566, 0.00128713])

xs_exp_limits_dijet_fb = array('d', [1000.0 * float(b) for b in xs_exp_limits_dijet ])

#Without JER syst
#xs_exp_limits_combine = array('d', [ 0.0745312, 0.0634375, 0.0545312, 0.0479687, 0.0426562, 0.0385937, 0.0351562, 0.0323437, 0.0297656, 0.0274218, 0.0252343, 0.0232031, 0.0214843, 0.0197656, 0.0182031, 0.0167968, 0.0157031, 0.0144921, 0.0134765, 0.0126171, 0.0105078, 0.0098046, 0.0091796, 0.0086328, 0.0081640, 0.0076757, 0.0072460, 0.0068945, 0.0065039, 0.0061523, 0.0058398, 0.0055664, 0.0052539, 0.0049804, 0.0047460, 0.0044726, 0.0042382, 0.0040039, 0.0037988, 0.0036035, 0.0032714, 0.0030957, 0.0029394, 0.0028027, 0.0026660, 0.0025488, 0.0024121, 0.0023144, 0.0021972, 0.0021191, 0.0020214, 0.0019384, 0.0018505, 0.0017822, 0.0017138, 0.0016455, 0.0015869, 0.0015380, 0.0014794, 0.0014404, 0.0014111, 0.0013720, 0.0013330, 0.0012939, 0.0012646, 0.0012353, 0.0012060, 0.0011767, 0.0011474, 0.0011279, 0.0011083, 0.0010888, 0.0010693, 0.0010498, 0.0010302, 0.0010205, 0.0010009, 0.0009912, 0.0009814, 0.0009619, 0.0009912, 0.0009814, 0.0009619, 0.0009521, 0.0009521, 0.0009423, 0.0009326, 0.0009228, 0.0009228 ])

#With JER syst
xs_exp_limits_combine = array('d', [0.0759375, 0.0640625, 0.0554687, 0.0485937, 0.0435937, 0.0392187, 0.0357812, 0.0329687, 0.0302343, 0.0278906, 0.0257031, 0.0236718, 0.0217968, 0.0200781, 0.0185156, 0.0171093, 0.0158593, 0.0147265, 0.0137109, 0.0127734, 0.0106640, 0.0099609, 0.0093359, 0.0087890, 0.0082421, 0.0078125, 0.0073632, 0.0069726, 0.0066210, 0.0062695, 0.0059570, 0.0056445, 0.0053320, 0.0050585, 0.0047851, 0.0045507, 0.0043164, 0.0040820, 0.0038574, 0.0036425, 0.0033105, 0.0031347, 0.0029980, 0.0028417, 0.0027050, 0.0025683, 0.0024511, 0.0023535, 0.0022363, 0.0021386, 0.0020410, 0.0019628, 0.0018798, 0.0018017, 0.0017333, 0.0016650, 0.0016064, 0.0015478, 0.0014990, 0.0014501, 0.0014306, 0.0013916, 0.0013525, 0.0013134, 0.0012744, 0.0012451, 0.0012158, 0.0011865, 0.0011669, 0.0011376, 0.0011181, 0.0010986, 0.0010791, 0.0010595, 0.0010400, 0.0010302, 0.0010107, 0.0010009, 0.0009912, 0.0009716, 0.0010009, 0.0009912, 0.0009716, 0.0009619, 0.0009521, 0.0009521, 0.0009423, 0.0009326, 0.0009326])

xs_exp_limits_combine_fb = array('d', [1000.0 * float(b) for b in xs_exp_limits_combine ])


masses_qstar =  array('d', [ 1.0,     1.05,     1.1,      1.15,     1.2,      1.25,     1.3,      1.35,     1.4,      1.45,
                             1.5,     1.55,     1.6,      1.65,     1.7,      1.75,     1.8,      1.85,     1.9,      1.95,
                             2.0,     2.05,     2.1,      2.15,     2.2,      2.25,     2.3,      2.35,     2.4,      2.45,
                             2.5,     2.55,     2.6,      2.65,     2.7,      2.75,     2.8,      2.85,     2.9,      2.95,
                             3.0,     3.05,     3.1,      3.15,     3.2,      3.25,     3.3,      3.35,     3.4,      3.45,
                             3.5,     3.55,     3.6,      3.65,     3.7,      3.75,     3.8,      3.85,     3.9,      3.95,
                             4.0,     4.05,     4.1,      4.15,     4.2,      4.25,     4.3,      4.35,     4.4,      4.45,
                             4.5,     4.55,     4.6,      4.65,     4.7,      4.75,     4.8,      4.85,     4.9,      4.95,
                             5.0,     5.05,     5.1,      5.15,     5.2,      5.25,     5.3,      5.35,     5.4
                                 ])
xs_qstar_f1p0 =  array('d', [1.635e+01, 1.307e+01, 1.068e+01, 8.636e+00, 7.036e+00, 5.801e+00, 4.827e+00, 3.979e+00, 3.363e+00, 2.799e+00, 2.373e+00, 2.024e+00, 1.709e+00, 1.467e+00, 1.243e+00, 1.066e+00, 9.292e-01, 7.949e-01, 6.885e-01, 5.937e-01, 5.244e-01, 4.471e-01, 3.951e-01, 3.450e-01, 3.010e-01, 2.659e-01, 2.322e-01, 2.051e-01, 1.805e-01, 1.582e-01, 1.402e-01, 1.236e-01, 1.099e-01, 9.711e-02, 8.650e-02, 7.670e-02, 6.787e-02, 6.093e-02, 5.372e-02, 4.790e-02, 4.273e-02, 3.781e-02, 3.391e-02, 3.058e-02, 2.720e-02, 2.412e-02, 2.186e-02, 1.945e-02, 1.744e-02, 1.542e-02, 1.417e-02, 1.255e-02, 1.126e-02, 1.014e-02, 9.062e-03, 8.230e-03, 7.276e-03, 6.623e-03, 5.911e-03, 5.294e-03, 4.814e-03, 4.309e-03, 3.870e-03, 3.490e-03, 3.156e-03, 2.821e-03, 2.554e-03, 2.276e-03, 2.057e-03, 1.866e-03, 1.656e-03, 1.501e-03, 1.354e-03, 1.213e-03, 1.089e-03, 9.782e-04, 8.813e-04, 7.969e-04, 7.214e-04, 6.426e-04, 5.836e-04, 5.244e-04, 4.734e-04, 4.233e-04, 3.807e-04, 3.446e-04, 3.108e-04, 2.797e-04, 2.517e-04])

eff_qstar_LID    = array('d', [ 0.488178, 0.492906, 0.497633, 0.502361, 0.507088, 0.511816, 0.516543, 0.521271, 0.525998, 0.530726,
                                0.535454, 0.540181, 0.544909, 0.549636, 0.554364, 0.559091, 0.563819, 0.568546, 0.573274, 0.578001,
                                0.582729, 0.583534, 0.584339, 0.585144, 0.585949, 0.586754, 0.587559, 0.588364, 0.589169, 0.589974,
                                0.590779, 0.591584, 0.592389, 0.593194, 0.593999, 0.594804, 0.595609, 0.596414, 0.597219, 0.598024,
                                0.598829, 0.598926, 0.599022, 0.599119, 0.599216, 0.599313, 0.599409, 0.599506, 0.599603, 0.599700,
                                0.599796, 0.599893, 0.599990, 0.600087, 0.600183, 0.600280, 0.600377, 0.600474, 0.600571, 0.600667,
                                0.600764, 0.600632, 0.600500, 0.600368, 0.600237, 0.600105, 0.599973, 0.599841, 0.599709, 0.599577, 
                                0.599445, 0.599314, 0.599182, 0.599050, 0.598918, 0.598786, 0.598654, 0.598523, 0.598391, 0.598259, 
                                0.598127, 0.597394, 0.596661, 0.595928, 0.595195, 0.594462, 0.593729, 0.592996, 0.592263 
                                ])

xsEff_f1p0 = array('d', [float(b) * float(m) for b,m in zip(xs_qstar_f1p0, eff_qstar_LID)])
xsEff_f1p0_fb = array('d', [1000.0 * float(b) for b in xsEff_f1p0])

graph_exp_combine = TGraph(len(masses_tev),masses_tev,xs_exp_limits_combine_fb)
#graph_exp_combine.SetFillColor(kYellow)
graph_exp_combine.GetXaxis().SetTitle("Resonance Mass [TeV]")
graph_exp_combine.GetYaxis().SetTitle("#sigma #times B #times A #times #epsilon [fb]")
graph_exp_combine.GetYaxis().SetRangeUser(5e-1,300)
graph_exp_combine.GetXaxis().SetNdivisions(510)
graph_exp_combine.GetXaxis().SetLimits(0.6,6)
graph_exp_combine.SetLineWidth(2)
graph_exp_combine.SetLineStyle(2)
graph_exp_combine.SetLineColor(4)

graph_exp_combine.GetYaxis().CenterTitle()
graph_exp_combine.GetYaxis().SetLabelSize(0.04)
graph_exp_combine.GetYaxis().SetTitleOffset(1.1)
graph_exp_combine.GetXaxis().CenterTitle()
graph_exp_combine.GetXaxis().SetLabelSize(0.04)
graph_exp_combine.GetXaxis().SetTitleOffset(1.1)
graph_exp_combine.GetXaxis().CenterTitle()

graph_exp_dijet = TGraph(len(masses_tev),masses_tev,xs_exp_limits_dijet_fb)
graph_exp_dijet.SetLineWidth(2)
graph_exp_dijet.SetLineStyle(2)
graph_exp_dijet.SetLineColor(6)

graph_obs_combine = TGraph(len(masses_tev),masses_tev,xs_obs_limits_combine_fb)
graph_obs_combine.SetMarkerStyle(24)
graph_obs_combine.SetMarkerColor(2)
graph_obs_combine.SetLineWidth(2)
graph_obs_combine.SetLineStyle(1)
graph_obs_combine.SetLineColor(2)

graph_obs_dijet =TGraph(len(masses_tev),masses_tev,xs_obs_limits_dijet_fb)
graph_obs_dijet.SetMarkerStyle(20)
graph_obs_dijet.SetMarkerColor(1)
graph_obs_dijet.SetLineWidth(2)
graph_obs_dijet.SetLineStyle(1)
graph_obs_dijet.SetLineColor(1)

graph_qstar = TGraph(len(masses_qstar),masses_qstar,xsEff_f1p0_fb)
graph_qstar.SetLineWidth(2)                
graph_qstar.SetLineColor(12)
graph_qstar.SetLineStyle(8)

c = TCanvas("c", "",800,800)
c.cd()


graph_exp_combine.Draw("AL")
graph_exp_dijet.Draw("L")
graph_obs_combine.Draw("LP")
graph_obs_dijet.Draw("LP")
graph_qstar.Draw("L")

##legend = TLegend(.55,.69,.85,.92)  ## for pas twiki
legend = TLegend(.54,.54,.76,.75)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.031)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs_dijet,"Obs. lmt (Dijet Limit Tool)","lp")
legend.AddEntry(graph_obs_combine,"Obs. lmt (Higgs COMBINE)","lp")
legend.AddEntry(graph_exp_dijet,"Exp. lmt (Dijet Limit Tool)","l")
legend.AddEntry(graph_exp_combine,"Exp. lmt (Higgs COMBINE)","l")
legend.AddEntry(graph_qstar,"Excited quark (f = 1.0)","l")
legend.Draw()

lumiTextSize = 0.6
lumiTextOffset = 0.2
lumi = TLatex()
lumi.SetNDC()
lumi.SetTextAngle(0)
lumi.SetTextColor(kBlack)
lumi.SetTextFont(42)
lumi.SetTextAlign(31)
lumi.SetTextSize(lumiTextSize*t_m)
lumi.DrawLatex(1 - r_m, 1 - t_m +  lumiTextOffset*t_m, "2.67 fb^{-1} (13 TeV)")

cmsTextFont = 61
cmsTextSize = 0.75
extraTextFont = 52
extraOverCmsTextSize = 0.76
relExtraDY = 1.2
##posX_ = l_m     + 0.045 * (1 - l_m - r_m)  ##Top left
##posX_ = l_m     + 0.5   * (1 - l_m - r_m)   ## Centre
posX_ = 1 - r_m + 0.045 * (1 - l_m - r_m)  ## Top right
posY_ = 1 - t_m - 0.035 * (1 - t_m - b_m)

cms =  TLatex()
cms.SetNDC()
cms.SetTextFont(cmsTextFont)
cms.SetTextSize(cmsTextSize * t_m)
cms.SetTextAlign(33)  ### 11-top left;  21-top centre;  31-top right
##cms.DrawLatex(posX_, posY_, "CMS")
cms.DrawLatex(0.9, 0.92, "CMS")

### if extra text (Unpublished or Preliminary)
cms.SetTextFont(extraTextFont);
cms.SetTextAlign(33);
cms.SetTextSize(extraOverCmsTextSize*cmsTextSize*t_m);
##cms.DrawLatex(posX_, posY_- relExtraDY*cmsTextSize*t_m, extraText);
#cms.DrawLatex(0.9, 0.9 - relExtraDY*cmsTextSize*t_m, "Preliminary");

l1 = TLatex()
l1.SetNDC()
l1.SetTextAlign(13)
l1.SetTextFont(62)
l1.SetTextSize(0.04)
l1.SetTextFont(42)
l1.DrawLatex(0.78,0.85, "q*#rightarrow q#gamma") ##0.21,0.26


gPad.RedrawAxis();

c.SetLogy()
c.SaveAs('LimitComp_DijetLimitTool_vs_HiggsCombineTool.pdf')
c.SaveAs('LimitComp_DijetLimitTool_vs_HiggsCombineTool.png')


