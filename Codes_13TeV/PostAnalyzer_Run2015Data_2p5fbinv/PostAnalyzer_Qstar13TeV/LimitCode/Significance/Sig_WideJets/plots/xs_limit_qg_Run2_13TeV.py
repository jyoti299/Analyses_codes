#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import numpy as np
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.06)
gStyle.SetPadBottomMargin(0.14)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')


syst = True
#syst = False

useTeV = True
#useTeV = False

mass_min = 1500
mass_max = 7200

########################################################
## Uncomment this part if running the limit code


### for running the limit code
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #cmd = "./stats " + str(int(mass)) + " qg | tee stats_" + str(int(mass)) + "_qg.log"
  #print "Running: " + cmd
  #proc = subprocess.Popen( cmd, shell=True, stdout = subprocess.PIPE, stderr = subprocess.STDOUT )
  #output = proc.communicate()[0]
  #if proc.returncode != 0:
    #print output
    #sys.exit(1)
  ##print output

  #outputlines = output.split("\n")

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

## for reading the limit code log files
#for mass in range(mass_min,mass_max+100,100):

  #masses.append(float(mass))
  #masses_exp.append(float(mass))

  #log_file = open("stats_" + str(int(mass)) + "_qg.log",'r')
  #outputlines = log_file.readlines()
  #log_file.close()

  #for line in outputlines:
    #if re.search("observed bound =", line):
      #xs_obs_limits.append(float(line.split()[6]))
    #if re.search("median:", line):
      #xs_exp_limits.append(float(line.split()[1]))
    #if re.search("1 sigma band:", line):
      #xs_exp_limits_1sigma.append(float(line.split()[4]))
      #xs_exp_limits_1sigma_up.append(float(line.split()[6]))
    #if re.search("2 sigma band:", line):
      #xs_exp_limits_2sigma.append(float(line.split()[4]))
      #xs_exp_limits_2sigma_up.append(float(line.split()[6]))

##------------------------------------------------------

#for i in range(0,len(masses)):
  #masses_exp.append( masses[len(masses)-i-1] )
  #xs_exp_limits_1sigma.append( xs_exp_limits_1sigma_up[len(masses)-i-1] )
  #xs_exp_limits_2sigma.append( xs_exp_limits_2sigma_up[len(masses)-i-1] )


#print "masses =", masses
#print "xs_obs_limits =", xs_obs_limits
#print "xs_exp_limits =", xs_exp_limits
#print ""
#print "masses_exp =", masses_exp
#print "xs_exp_limits_1sigma =", xs_exp_limits_1sigma
#print "xs_exp_limits_2sigma =", xs_exp_limits_2sigma

##
########################################################

########################################################
## Comment out this part if running the limit code

masses = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0])
xs_obs_limits = array('d', [0.602272, 0.64491, 0.865673, 0.616196, 0.343269, 0.212624, 0.140649, 0.103605, 0.0918694, 0.101727, 0.0892428, 0.0678928, 0.0825205, 0.0915746, 0.0943468, 0.0911699, 0.0866712, 0.0832746, 0.0744257, 0.0706772, 0.0713686, 0.065973, 0.0549593, 0.0506374, 0.0501734, 0.0443592, 0.0335244, 0.0213411, 0.0135937, 0.0100408, 0.00828029, 0.00734691, 0.00693662, 0.00679592, 0.00720566, 0.00848763, 0.00966361, 0.0100682, 0.0101104, 0.00961391, 0.00901056, 0.00843457, 0.00787787, 0.007268, 0.0068383, 0.0062159, 0.00564396, 0.00512824, 0.00467353, 0.00421974, 0.00397535, 0.00369705, 0.00362929, 0.00343399, 0.00331401, 0.00323391, 0.00324306, 0.00327224])
xs_exp_limits = array('d', [0.604644, 0.474845, 0.431861, 0.371758, 0.309556, 0.251925, 0.210053, 0.196129, 0.167196, 0.158303, 0.131379, 0.108406, 0.100809, 0.0946049, 0.0795457, 0.0718638, 0.0629254, 0.0589563, 0.0533615, 0.047158, 0.0424394, 0.0381913, 0.0333004, 0.0309208, 0.0274924, 0.024903, 0.0237022, 0.0209057, 0.0194533, 0.0179081, 0.0165851, 0.0141789, 0.0139069, 0.0127362, 0.0119621, 0.0104715, 0.00996637, 0.00912483, 0.00839968, 0.0077472, 0.00685672, 0.00680356, 0.00636493, 0.0060644, 0.00583616, 0.00540399, 0.00510707, 0.00492442, 0.0046922, 0.00473624, 0.00445597, 0.00434573, 0.00420864, 0.00409594, 0.00399577, 0.00389151, 0.00387871, 0.00392686])

masses_exp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0, 7200.0, 7100.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
xs_exp_limits_1sigma = array('d', [0.2853, 0.244539, 0.235952, 0.207166, 0.180094, 0.143946, 0.124651, 0.118532, 0.0969195, 0.0954698, 0.0836137, 0.0703562, 0.0623837, 0.0579678, 0.0510241, 0.047118, 0.0405802, 0.0387349, 0.0353242, 0.0295522, 0.0271465, 0.0259471, 0.0228198, 0.0201015, 0.0182966, 0.0157021, 0.0142952, 0.0136448, 0.0125997, 0.0120623, 0.0112988, 0.0100233, 0.0100245, 0.00820709, 0.00786614, 0.00711451, 0.00691568, 0.00617432, 0.00584765, 0.00539488, 0.00506477, 0.00486472, 0.00466572, 0.00434619, 0.00416497, 0.00396224, 0.00388139, 0.00366277, 0.00360017, 0.00351472, 0.00347414, 0.00337689, 0.00329924, 0.00323983, 0.00315373, 0.00310687, 0.00312596, 0.00315647, 0.00523777, 0.00530765, 0.00531961, 0.00546403, 0.00565934, 0.00592875, 0.0061519, 0.00632135, 0.00661177, 0.00661966, 0.00681801, 0.00733088, 0.00805349, 0.00810665, 0.00862387, 0.00905342, 0.0104278, 0.0105134, 0.0114327, 0.0127127, 0.0139789, 0.0145953, 0.0163745, 0.0176041, 0.0189749, 0.021562, 0.0213639, 0.0256828, 0.0275516, 0.0310818, 0.0332647, 0.0369151, 0.0387039, 0.0416187, 0.0478335, 0.0517713, 0.0581212, 0.0652654, 0.0740231, 0.0821329, 0.0925018, 0.100989, 0.113203, 0.130255, 0.157042, 0.160112, 0.18733, 0.219719, 0.260911, 0.300573, 0.328281, 0.366277, 0.429857, 0.531398, 0.663315, 0.787184, 1.01176, 1.28068])
xs_exp_limits_2sigma = array('d', [0.163438, 0.151667, 0.136803, 0.126579, 0.112398, 0.0891001, 0.0836284, 0.0698054, 0.0609081, 0.059472, 0.0574443, 0.0492874, 0.0458732, 0.0384502, 0.0316819, 0.0293767, 0.0290107, 0.0279076, 0.0245222, 0.020806, 0.0209858, 0.0168607, 0.0153076, 0.0147007, 0.0136126, 0.0112105, 0.00994933, 0.00958966, 0.00942894, 0.00866542, 0.00754119, 0.00735835, 0.00700928, 0.00629933, 0.00555728, 0.00516254, 0.00471292, 0.00466114, 0.00443122, 0.00433999, 0.0040669, 0.00392862, 0.00398882, 0.00364227, 0.00331858, 0.00312484, 0.00297247, 0.00287258, 0.00290991, 0.00285076, 0.00271222, 0.0026491, 0.00261129, 0.00258643, 0.00257122, 0.00256276, 0.00261636, 0.00269492, 0.00807348, 0.00803616, 0.00802352, 0.00812285, 0.00836761, 0.00861241, 0.00903452, 0.00942058, 0.00929309, 0.00933096, 0.00995469, 0.0101335, 0.0116331, 0.0120023, 0.0122573, 0.0132424, 0.0143662, 0.0154672, 0.0158758, 0.0178757, 0.0203951, 0.0205945, 0.0233528, 0.0245369, 0.026169, 0.0298682, 0.0321573, 0.0349804, 0.0383436, 0.0450493, 0.0443136, 0.0549707, 0.0539839, 0.0646305, 0.0672783, 0.0729478, 0.0870451, 0.0911996, 0.102919, 0.11931, 0.131371, 0.141012, 0.155376, 0.186906, 0.217985, 0.239476, 0.252136, 0.321292, 0.371306, 0.441928, 0.511322, 0.549498, 0.636722, 0.77527, 1.04241, 1.2127, 1.57746, 2.17407])

if syst:
  masses = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0])
  xs_obs_limits = array('d', [1.3959, 1.44829, 1.31726, 1.00642, 0.637327, 0.378596, 0.248195, 0.179449, 0.156801, 0.157078, 0.140802, 0.123014, 0.126673, 0.129163, 0.12916, 0.123556, 0.115661, 0.10677, 0.097489, 0.090278, 0.0860718, 0.0789864, 0.0697045, 0.0619197, 0.0574263, 0.0508895, 0.0431843, 0.0315208, 0.0207677, 0.0137897, 0.0105188, 0.00888977, 0.00784571, 0.00769529, 0.00820165, 0.00918646, 0.0099582, 0.0102429, 0.0102928, 0.00988389, 0.00943999, 0.00886349, 0.0083116, 0.00767947, 0.00708125, 0.00644123, 0.00599399, 0.00549601, 0.0049915, 0.00448342, 0.00424979, 0.00392172, 0.00367954, 0.00349917, 0.00334032, 0.00325643, 0.00322229, 0.00324652])
  xs_exp_limits = array('d', [1.5228, 1.141925, 0.9300815, 0.689262, 0.546956, 0.444851, 0.362029, 0.3022745, 0.2590265, 0.2264055, 0.202871, 0.173006, 0.1562905, 0.140351, 0.126195, 0.1108165, 0.09769975, 0.0839188, 0.07267645, 0.06334305, 0.0558337, 0.05026125, 0.04454515, 0.0396875, 0.03530295, 0.0312174, 0.0287047, 0.02557055, 0.0228086, 0.020473, 0.01940965, 0.01746235, 0.01593015, 0.01452195, 0.01314315, 0.0118794, 0.0107423, 0.009848545, 0.00888611, 0.00831464, 0.00746645, 0.006944, 0.00649144, 0.00627163, 0.006093345, 0.005412895, 0.005109905, 0.00507699, 0.00489189, 0.0046593, 0.00453367, 0.004363205, 0.0042402, 0.004188755, 0.004090695, 0.00398848, 0.00398725, 0.00402766])

  masses_exp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0, 7200.0, 7100.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
  xs_exp_limits_1sigma = array('d', [0.721714124, 0.631736856, 0.558553175, 0.470993668, 0.38540461, 0.292100099, 0.246648084, 0.195329031, 0.170304775, 0.151658731, 0.142402301, 0.12565916, 0.108607947, 0.101322454, 0.0860008761, 0.0797316563, 0.0716004546, 0.0607575435, 0.051593784, 0.0448432015, 0.0398444217, 0.0346097721, 0.0308038337, 0.0273996869, 0.0225225359, 0.0208738741, 0.0200208603, 0.0170646508, 0.0155928479, 0.01482426, 0.0130843672, 0.012155441, 0.0111532399, 0.0104782094, 0.00960672798, 0.00857089729, 0.00775531542, 0.00715565013, 0.00622196615, 0.00590606991, 0.00540067531, 0.00504792584, 0.00471318245, 0.00456836534, 0.00439701703, 0.00413336818, 0.00401954343, 0.00395687587, 0.00375004678, 0.00365337945, 0.00355548094, 0.00345560082, 0.00334012485, 0.00326025888, 0.00316509729, 0.00310201615, 0.00310384492, 0.00313534328, 0.00544063129, 0.00544906697, 0.00549925287, 0.00566461871, 0.00581205873, 0.00599964465, 0.00627441488, 0.00648225198, 0.00653319297, 0.00700694675, 0.00739161786, 0.00756735401, 0.00790515489, 0.00846596296, 0.00914980261, 0.00972683605, 0.0103763048, 0.0111350084, 0.0118446812, 0.0126659189, 0.0146675648, 0.0153434602, 0.016817808, 0.019581711, 0.0213866377, 0.0232292919, 0.0257266766, 0.0282361366, 0.0296520184, 0.0332579104, 0.0364649632, 0.0408794621, 0.0445666784, 0.0477944899, 0.0559778857, 0.0638585129, 0.0717586731, 0.080585998, 0.093825658, 0.102601694, 0.115320353, 0.135347277, 0.149881, 0.172304365, 0.203433744, 0.226194532, 0.254307789, 0.2848096, 0.330544379, 0.390097051, 0.453806766, 0.543876953, 0.621146203, 0.779438364, 1.04482023, 1.34483281, 1.82688529, 2.50271694])
  xs_exp_limits_2sigma = array('d', [0.4369326, 0.391122725, 0.340334574, 0.300557696, 0.255323034, 0.204611398, 0.164737931, 0.145685612, 0.128676817, 0.110512037, 0.103457831, 0.0915323082, 0.08081837, 0.0750536955, 0.0652262756, 0.0566713752, 0.047808234, 0.0421397871, 0.0386531272, 0.0327947898, 0.0307225269, 0.0267247493, 0.0236537723, 0.019789159, 0.0164417366, 0.0166294427, 0.0139006111, 0.0129655944, 0.011525559, 0.0105659932, 0.00959691053, 0.0087669502, 0.00765885417, 0.00782056612, 0.00718617947, 0.00609739452, 0.00566285339, 0.0052787945, 0.00498919541, 0.00467876607, 0.00458722161, 0.00400714784, 0.00372961633, 0.00356335775, 0.00340746917, 0.00329176383, 0.00341489268, 0.00327371547, 0.00309386593, 0.00297307262, 0.00286053211, 0.0027708407, 0.00273909253, 0.00268127996, 0.00265256286, 0.00261789319, 0.00266531949, 0.00271156476, 0.00827278916, 0.00826097175, 0.00813195718, 0.00822283726, 0.0083583554, 0.00884584236, 0.00910401358, 0.00937951238, 0.00924144283, 0.00968753828, 0.0102648552, 0.0105064664, 0.0102125648, 0.0119910765, 0.0122051642, 0.0130687654, 0.0143911193, 0.0153375006, 0.0163903199, 0.0176103631, 0.0197748371, 0.0210151078, 0.0231999964, 0.0273308275, 0.0307053171, 0.0325192377, 0.0354033916, 0.0410737737, 0.0424342084, 0.0500180317, 0.0504438917, 0.055196649, 0.0576056278, 0.0664653931, 0.0805437828, 0.0901680478, 0.0934873997, 0.112390409, 0.121745614, 0.137358388, 0.150670633, 0.169771671, 0.212135838, 0.240774715, 0.2717631, 0.311922521, 0.352178534, 0.382378386, 0.44548551, 0.53893833, 0.653581409, 0.807222698, 0.861161209, 0.99160527, 1.40329323, 1.82180128, 2.54262899, 3.41598394])

##
########################################################

massesString = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0,9100.,9200.,9300.,9400.,9500.,9600.,9700.,9800.,9900.,10000.])
xsString = array('d', [8316.184311558545,5312.93137758767,3435.0309937336524,2304.4139502741305,1569.8115447896687,1090.9516635659693,770.901859690924,551.9206062572061,399.69535383507633,293.77957451762086,218.15126842827823,162.87634729465125,123.17685479653694,93.63530805932386,71.53697229809124,55.37491301647483,42.75271508357369,33.36378355470234,26.06619302090876,20.311817606835643,16.1180931789545,12.768644973921226,10.142660425967444,8.057990848043234,6.400465846290908,5.115134438331436,4.132099789492928,3.3193854239538734,2.6581204529344302,2.157554604919995,1.7505176068913348,1.4049155245498584,1.140055677916783,0.9253251132104159,0.7522038169131606,0.6119747371392215,0.49612321727328523,0.40492020959456737,0.33091999402250655,0.27017917021492555,0.2201693919322846,0.17830700070267996,0.14564253802358157,0.11940534430331146,0.09694948234356839,0.0793065371847468,0.06446186373361917,0.05282660618352478,
                       0.0428516302310620888,0.0348997638039910363,0.0283334766442618227,0.0231416918363592127,0.0187417921340763783,0.0153501307395115115,0.0124396534127133717,0.0100542205744949455,0.0081744954858627415,0.0066338099362915941,0.0053365711503318145,0.00430912459914657443,0.00346381039244064343,0.00278602671711227174,0.00225154342228859257,0.0018082930150063248,0.00143929440338502119,0.0011581373956044489,0.00091869589873893118,0.00073410823691329855,0.00058669382997948734,0.0004661568745858897,0.000368716655469570365,0.000293168485206959169,0.000230224535021638668,0.000182317101888465142,0.000143263359883433282,0.000112630538527214965,0.000088189175598406759,0.000068708474367442343,0.000053931726669273556,0.0000416417855733682702,0.0000326529676755488658,0.0000254365480426201587,0.0000198410151166864761,0.0000154034425617473576,0.0000119095554601641413,9.2537574320108232e-6,7.2155417437856749e-6,5.6130924422251982e-6,4.36634755605624901e-6,3.39717456406994868e-6,2.6766018046173896e-6])

massesQstar = array('d', [1000.0,1100.0,1200.0,1300.0,1400.0,1500.0,1600.0,1700.0,1800.0,1900.0,2000.0,2100.0,2200.0,2300.0,2400.0,2500.0,2600.0,2700.0,2800.0,2900.0,3000.0,3100.0,3200.0,3300.0,3400.0,3500.0,3600.0,3700.0,3800.0,3900.0,4000.0,4100.0,4200.0,4300.0,4400.0,4500.0,4600.0,4700.0,4800.0,4900.0,5000.0,5100.0,5200.0,5300.0,5400.0,5500.0,5600.0,5700.0,5800.0,5900.0,6000.0,6100.0,6200.0,6300.0,6400.0,6500.0,6600.0,6700.0,6800.0,6900.0,7000.0,7100.0,7200.0,7300.0,7400.0,7500.0,7600.0,7700.0,7800.0,7900.0,8000.0,8100.0,8200.0,8300.0,8400.0,8500.0,8600.0,8700.0,8800.0,8900.0,9000.0])
xsQstar = array('d', [0.4101E+03,0.2620E+03,0.1721E+03,0.1157E+03,0.7934E+02,0.5540E+02,0.3928E+02,0.2823E+02,0.2054E+02,0.1510E+02,0.1121E+02,0.8390E+01,0.6328E+01,0.4807E+01,0.3674E+01,0.2824E+01,0.2182E+01,0.1694E+01,0.1320E+01,0.1033E+01,0.8116E+00,0.6395E+00,0.5054E+00,0.4006E+00,0.3182E+00,0.2534E+00,0.2022E+00,0.1616E+00,0.1294E+00,0.1038E+00,0.8333E-01,0.6700E-01,0.5392E-01,0.4344E-01,0.3503E-01,0.2827E-01,0.2283E-01,0.1844E-01,0.1490E-01,0.1205E-01,0.9743E-02,0.7880E-02,0.6373E-02,0.5155E-02,0.4169E-02,0.3371E-02,0.2725E-02,0.2202E-02,0.1779E-02,0.1437E-02,0.1159E-02,0.9353E-03,0.7541E-03,0.6076E-03,0.4891E-03,0.3935E-03,0.3164E-03,0.2541E-03,0.2039E-03,0.1635E-03,0.1310E-03,0.1049E-03,0.8385E-04,0.6699E-04,0.5347E-04,0.4264E-04,0.3397E-04,0.2704E-04,0.2151E-04,0.1709E-04,0.1357E-04,0.1077E-04,0.8544E-05,0.6773E-05,0.5367E-05,0.4251E-05,0.3367E-05,0.2666E-05,0.2112E-05,0.1673E-05,0.1326E-05])

xs_max = 2e+01
idx = 0

for i, xs in enumerate(xsString):
  if xs < xs_max:
    idx = i
    break

if useTeV:
  masses = array('d',(np.array(masses.tolist())/1000.).tolist())
  masses_exp = array('d',(np.array(masses_exp.tolist())/1000.).tolist())
  massesString = array('d',(np.array(massesString.tolist())/1000.).tolist())
  massesQstar = array('d',(np.array(massesQstar.tolist())/1000.).tolist())

graph_xsString = TGraph(len(massesString[idx:-1]),massesString[idx:-1],xsString[idx:-1])
graph_xsString.SetLineWidth(3)
graph_xsString.SetLineStyle(8)
graph_xsString.SetLineColor(9)

for i, xs in enumerate(xsQstar):
  if xs < xs_max:
    idx = i
    break

graph_xsQstar = TGraph(len(massesQstar[idx:-1]),massesQstar[idx:-1],xsQstar[idx:-1])
graph_xsQstar.SetLineWidth(3)
graph_xsQstar.SetLineStyle(2)
graph_xsQstar.SetLineColor(1)

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("qg resonance mass [GeV]")
if useTeV:
  graph_exp_2sigma.GetXaxis().SetTitle("qg resonance mass [TeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #it{B} #it{A} [pb]")
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-03,1e+02)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(4)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(3)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)


c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
graph_xsQstar.Draw("L")
graph_xsString.Draw("L")

legend = TLegend(.59,.56,.94,.76)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.035)
legend.SetMargin(0.20)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1 std. deviation","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2 std. deviation","F")
legend.Draw()

legendTh = TLegend(.59,.80,.94,.88)
legendTh.SetBorderSize(0)
legendTh.SetFillColor(0)
legendTh.SetFillStyle(0)
legendTh.SetTextFont(42)
legendTh.SetTextSize(0.035)
legendTh.SetMargin(0.20)
legendTh.AddEntry(graph_xsString,"String","l")
legendTh.AddEntry(graph_xsQstar,"Excited quark","l")
legendTh.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

# draw the lumi text on the canvas
#CMS_lumi.extraText = "Preliminary"
CMS_lumi.extraText = ""
CMS_lumi.lumi_sqrtS = "2.4 fb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
if( iPos==0 ): CMS_lumi.relPosX = 0.15
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_DijetLimitCode_qg' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_2445_invpb.eps')
