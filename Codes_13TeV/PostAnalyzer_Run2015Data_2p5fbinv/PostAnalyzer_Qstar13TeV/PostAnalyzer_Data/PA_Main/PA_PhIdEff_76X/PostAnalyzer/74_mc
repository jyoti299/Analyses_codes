Int_t           run;
Long64_t        event;
Int_t           lumis;
Bool_t          isData;
Int_t           nVtx;
vector<int>     *nTrksPV;
vector<float>   *vtx;
vector<float>   *vty;
vector<float>   *vtz;
vector<float>   *vrho;
vector<int>     *vndof;
vector<float>   *vchi2;
vector<bool>    *isFake;
Float_t         rho;
Float_t         rhoCentral;
ULong64_t       HLTEleMuX;
ULong64_t       HLTPho;
ULong64_t       HLTJet;
ULong64_t       HLTEleMuXIsPrescaled;
ULong64_t       HLTPhoIsPrescaled;
ULong64_t       HLTJetIsPrescaled;
vector<float>   *pdf;
Float_t         pthat;
Float_t         processID;
Float_t         genWeight;
Int_t           nPUInfo;
vector<int>     *nPU;
vector<int>     *puBX;
vector<float>   *puTrue; //getTrueNumofInteractions, Same for a BX(both in and out of time), so this vector has all the values same for an event.
Int_t           nMC;
vector<int>     *mcPID;
vector<float>   *mcVtx;
vector<float>   *mcVty;
vector<float>   *mcVtz;
vector<float>   *mcPt;
vector<float>   *mcMass;
vector<float>   *mcEta;
vector<float>   *mcPhi;
vector<float>   *mcE;
vector<float>   *mcEt;
vector<int>     *mcGMomPID;
vector<int>     *mcMomPID;
vector<float>   *mcMomPt;
vector<float>   *mcMomMass;
vector<float>   *mcMomEta;
vector<float>   *mcMomPhi;
vector<int>     *mcIndex;
vector<unsigned short> *mcStatusFlag;
vector<int>     *mcParentage;
vector<int>     *mcStatus;
vector<float>   *mcCalIsoDR03;
vector<float>   *mcTrkIsoDR03;
vector<float>   *mcCalIsoDR04;
vector<float>   *mcTrkIsoDR04;
Int_t           metFilters;
Float_t         genMET;
Float_t         genMETPhi;
Float_t         pfMET;
Float_t         pfMETPhi;
Float_t         pfMETsumEt;
Float_t         pfMETmEtSig;
Float_t         pfMETSig;
Float_t         pfMET_T1JERUp;
Float_t         pfMET_T1JERDo;
Float_t         pfMET_T1JESUp;
Float_t         pfMET_T1JESDo;
Float_t         pfMET_T1MESUp;
Float_t         pfMET_T1MESDo;
Float_t         pfMET_T1EESUp;
Float_t         pfMET_T1EESDo;
Float_t         pfMET_T1PESUp;
Float_t         pfMET_T1PESDo;
Float_t         pfMET_T1TESUp;
Float_t         pfMET_T1TESDo;
Float_t         pfMET_T1UESUp;
Float_t         pfMET_T1UESDo;
Int_t           nPho;
vector<float>   *phoE;
vector<float>   *phoEt;
vector<float>   *phoEta;
vector<float>   *phoPhi;
vector<float>   *phoSCE;
vector<float>   *phoSCRawE;
vector<float>   *phoESEn;
vector<float>   *phoESEnP1;
vector<float>   *phoESEnP2;
vector<float>   *phoSCEta;
vector<float>   *phoSCPhi;
vector<float>   *phoSCEtaWidth;
vector<float>   *phoSCPhiWidth;
vector<float>   *phoSCBrem;
vector<int>     *phohasPixelSeed;
vector<int>     *phoEleVeto;
vector<float>   *phoR9;
vector<float>   *phoHoverE;
vector<float>   *phoSigmaIEtaIEta;
vector<float>   *phoSigmaIEtaIPhi;
vector<float>   *phoSigmaIPhiIPhi;
vector<float>   *phoE1x3;
vector<float>   *phoE2x2;
vector<float>   *phoE2x5Max;
vector<float>   *phoE5x5;
vector<float>   *phoESEffSigmaRR;
vector<float>   *phomaxXtalenergyFull5x5;
vector<float>   *phoseedTimeFull5x5;
vector<float>   *phomaxXtalenergy;
vector<float>   *phoseedTime;
vector<float>   *phoSigmaIEtaIEtaFull5x5;
vector<float>   *phoSigmaIEtaIPhiFull5x5;
vector<float>   *phoSigmaIPhiIPhiFull5x5;
vector<float>   *phoE1x3Full5x5;
vector<float>   *phoE2x2Full5x5;
vector<float>   *phoE2x5MaxFull5x5;
vector<float>   *phoE5x5Full5x5;
vector<float>   *phoR9Full5x5;
vector<float>   *phoSeedBCE;
vector<float>   *phoSeedBCEta;
vector<float>   *phoPFChIso;
vector<float>   *phoPFPhoIso;
vector<float>   *phoPFNeuIso;
vector<float>   *phoPFChWorstIso;
vector<float>   *phoPFChIsoFrix1;
vector<float>   *phoPFChIsoFrix2;
vector<float>   *phoPFChIsoFrix3;
vector<float>   *phoPFChIsoFrix4;
vector<float>   *phoPFChIsoFrix5;
vector<float>   *phoPFChIsoFrix6;
vector<float>   *phoPFChIsoFrix7;
vector<float>   *phoPFChIsoFrix8;
vector<float>   *phoPFPhoIsoFrix1;
vector<float>   *phoPFPhoIsoFrix2;
vector<float>   *phoPFPhoIsoFrix3;
vector<float>   *phoPFPhoIsoFrix4;
vector<float>   *phoPFPhoIsoFrix5;
vector<float>   *phoPFPhoIsoFrix6;
vector<float>   *phoPFPhoIsoFrix7;
vector<float>   *phoPFPhoIsoFrix8;
vector<float>   *phoPFNeuIsoFrix1;
vector<float>   *phoPFNeuIsoFrix2;
vector<float>   *phoPFNeuIsoFrix3;
vector<float>   *phoPFNeuIsoFrix4;
vector<float>   *phoPFNeuIsoFrix5;
vector<float>   *phoPFNeuIsoFrix6;
vector<float>   *phoPFNeuIsoFrix7;
vector<float>   *phoPFNeuIsoFrix8;
vector<float>   *phoEcalRecHitSumEtConeDR03;
vector<float>   *phohcalDepth1TowerSumEtConeDR03;
vector<float>   *phohcalDepth2TowerSumEtConeDR03;
vector<float>   *phohcalTowerSumEtConeDR03;
vector<float>   *photrkSumPtHollowConeDR03;
vector<float>   *phoIDMVA;
vector<int>     *phoFiredSingleTrgs;
vector<int>     *phoFiredDoubleTrgs;
vector<unsigned short> *phoIDbit;
Int_t           nEle;
vector<int>     *eleCharge;
vector<int>     *eleChargeConsistent;
vector<float>   *eleEn;
vector<float>   *eleSCEn;
vector<float>   *eleESEn;
vector<float>   *eleESEnP1;
vector<float>   *eleESEnP2;
vector<float>   *eleD0;
vector<float>   *eleDz;
vector<float>   *elePt;
vector<float>   *eleEta;
vector<float>   *elePhi;
vector<float>   *eleR9;
vector<float>   *eleSCEta;
vector<float>   *eleSCPhi;
vector<float>   *eleSCRawEn;
vector<float>   *eleSCEtaWidth;
vector<float>   *eleSCPhiWidth;
vector<float>   *eleHoverE;
vector<float>   *eleEoverP;
vector<float>   *eleEoverPout;
vector<float>   *eleEoverPInv;
vector<float>   *eleBrem;
vector<float>   *eledEtaAtVtx;
vector<float>   *eledPhiAtVtx;
vector<float>   *eledEtaAtCalo;
vector<float>   *eleSigmaIEtaIEta;
vector<float>   *eleSigmaIEtaIPhi;
vector<float>   *eleSigmaIPhiIPhi;
vector<float>   *eleSigmaIEtaIEtaFull5x5;
vector<float>   *eleSigmaIPhiIPhiFull5x5;
vector<int>     *eleConvVeto;
vector<int>     *eleMissHits;
vector<float>   *eleESEffSigmaRR;
vector<float>   *elePFChIso;
vector<float>   *elePFPhoIso;
vector<float>   *elePFNeuIso;
vector<float>   *elePFPUIso;
vector<float>   *eleIDMVANonTrg;
vector<float>   *eleIDMVATrg;
vector<float>   *eledEtaseedAtVtx;
vector<float>   *eleE1x5;
vector<float>   *eleE2x5;
vector<float>   *eleE5x5;
vector<float>   *eleE1x5Full5x5;
vector<float>   *eleE2x5Full5x5;
vector<float>   *eleE5x5Full5x5;
vector<float>   *eleR9Full5x5;
vector<int>     *eleEcalDrivenSeed;
vector<float>   *eleDr03EcalRecHitSumEt;
vector<float>   *eleDr03HcalDepth1TowerSumEt;
vector<float>   *eleDr03HcalDepth2TowerSumEt;
vector<float>   *eleDr03HcalTowerSumEt;
vector<float>   *eleDr03TkSumPt;
vector<float>   *elecaloEnergy;
vector<float>   *eleTrkdxy;
vector<float>   *eleKFHits;
vector<float>   *eleKFChi2;
vector<vector<float> > *eleGSFPt;
vector<vector<float> > *eleGSFEta;
vector<vector<float> > *eleGSFPhi;
vector<vector<float> > *eleGSFCharge;
vector<vector<int> > *eleGSFHits;
vector<vector<int> > *eleGSFMissHits;
vector<vector<int> > *eleGSFNHitsMax;
vector<vector<float> > *eleGSFVtxProb;
vector<vector<float> > *eleGSFlxyPV;
vector<vector<float> > *eleGSFlxyBS;
vector<vector<float> > *eleBCEn;
vector<vector<float> > *eleBCEta;
vector<vector<float> > *eleBCPhi;
vector<vector<float> > *eleBCS25;
vector<vector<float> > *eleBCS15;
vector<vector<float> > *eleBCSieie;
vector<vector<float> > *eleBCSieip;
vector<vector<float> > *eleBCSipip;
vector<int>     *eleFiredTrgs;
vector<unsigned short> *eleIDbit;
vector<float>   *eleESEnP1Raw;
vector<float>   *eleESEnP2Raw;
Int_t           nGSFTrk;
vector<float>   *gsfPt;
vector<float>   *gsfEta;
vector<float>   *gsfPhi;
Int_t           npfHF;
vector<float>   *pfHFEn;
vector<float>   *pfHFECALEn;
vector<float>   *pfHFHCALEn;
vector<float>   *pfHFPt;
vector<float>   *pfHFEta;
vector<float>   *pfHFPhi;
vector<float>   *pfHFIso;
Int_t           nMu;
vector<float>   *muPt;
vector<float>   *muEn;
vector<float>   *muEta;
vector<float>   *muPhi;
vector<int>     *muCharge;
vector<int>     *muType;
vector<bool>    *muIsLooseID;
vector<bool>    *muIsMediumID;
vector<bool>    *muIsTightID;
vector<bool>    *muIsSoftID;
vector<bool>    *muIsHighPtID;
vector<float>   *muD0;
vector<float>   *muDz;
vector<float>   *muChi2NDF;
vector<float>   *muInnerD0;
vector<float>   *muInnerDz;
vector<int>     *muTrkLayers;
vector<int>     *muPixelLayers;
vector<int>     *muPixelHits;
vector<int>     *muMuonHits;
vector<int>     *muStations;
vector<int>     *muTrkQuality;
vector<float>   *muIsoTrk;
vector<float>   *muPFChIso;
vector<float>   *muPFPhoIso;
vector<float>   *muPFNeuIso;
vector<float>   *muPFPUIso;
vector<int>     *muFiredTrgs;
vector<float>   *muInnervalidFraction;
vector<float>   *musegmentCompatibility;
vector<float>   *muchi2LocalPosition;
vector<float>   *mutrkKink;
vector<float>   *muBestTrkPtError;
vector<float>   *muBestTrkPt;
Int_t           nTau;
vector<bool>    *pfTausDiscriminationByDecayModeFinding;
vector<bool>    *pfTausDiscriminationByDecayModeFindingNewDMs;
vector<bool>    *tauByMVA5LooseElectronRejection;
vector<bool>    *tauByMVA5MediumElectronRejection;
vector<bool>    *tauByMVA5TightElectronRejection;
vector<bool>    *tauByMVA5VTightElectronRejection;
vector<bool>    *tauByLooseMuonRejection3;
vector<bool>    *tauByTightMuonRejection3;
vector<bool>    *tauByLooseCombinedIsolationDeltaBetaCorr3Hits;
vector<bool>    *tauByMediumCombinedIsolationDeltaBetaCorr3Hits;
vector<bool>    *tauByTightCombinedIsolationDeltaBetaCorr3Hits;
vector<float>   *tauCombinedIsolationDeltaBetaCorrRaw3Hits;
vector<bool>    *tauByVLooseIsolationMVA3oldDMwLT;
vector<bool>    *tauByLooseIsolationMVA3oldDMwLT;
vector<bool>    *tauByMediumIsolationMVA3oldDMwLT;
vector<bool>    *tauByTightIsolationMVA3oldDMwLT;
vector<bool>    *tauByVTightIsolationMVA3oldDMwLT;
vector<bool>    *tauByVVTightIsolationMVA3oldDMwLT;
vector<float>   *tauByIsolationMVA3oldDMwLTraw;
vector<bool>    *tauByLooseIsolationMVA3newDMwLT;
vector<bool>    *tauByVLooseIsolationMVA3newDMwLT;
vector<bool>    *tauByMediumIsolationMVA3newDMwLT;
vector<bool>    *tauByTightIsolationMVA3newDMwLT;
vector<bool>    *tauByVTightIsolationMVA3newDMwLT;
vector<bool>    *tauByVVTightIsolationMVA3newDMwLT;
vector<float>   *tauByIsolationMVA3newDMwLTraw;
vector<float>   *tauEta;
vector<float>   *tauPhi;
vector<float>   *tauPt;
vector<float>   *tauEt;
vector<float>   *tauCharge;
vector<float>   *tauP;
vector<float>   *tauPx;
vector<float>   *tauPy;
vector<float>   *tauPz;
vector<float>   *tauVz;
vector<float>   *tauEnergy;
vector<float>   *tauMass;
vector<float>   *tauDxy;
vector<float>   *tauZImpact;
vector<int>     *tauDecayMode;
vector<bool>    *tauLeadChargedHadronExists;
vector<float>   *tauLeadChargedHadronEta;
vector<float>   *tauLeadChargedHadronPhi;
vector<float>   *tauLeadChargedHadronPt;
vector<float>   *tauChargedIsoPtSum;
vector<float>   *tauNeutralIsoPtSum;
vector<float>   *tauPuCorrPtSum;
vector<float>   *tauNumSignalPFChargedHadrCands;
vector<float>   *tauNumSignalPFNeutrHadrCands;
vector<float>   *tauNumSignalPFGammaCands;
vector<float>   *tauNumSignalPFCands;
vector<float>   *tauNumIsolationPFChargedHadrCands;
vector<float>   *tauNumIsolationPFNeutrHadrCands;
vector<float>   *tauNumIsolationPFGammaCands;
vector<float>   *tauNumIsolationPFCands;
Int_t           nJet;
vector<float>   *jetPt;
vector<float>   *jetEn;
vector<float>   *jetEta;
vector<float>   *jetPhi;
vector<float>   *jetRawPt;
vector<float>   *jetRawEn;
vector<float>   *jetArea;
vector<float>   *jetpfCombinedInclusiveSecondaryVertexV2BJetTags;
vector<float>   *jetJetProbabilityBJetTags;
vector<float>   *jetpfCombinedMVABJetTags;
vector<int>     *jetPartonID;
vector<int>     *jetGenJetIndex;
vector<float>   *jetGenJetEn;
vector<float>   *jetGenJetPt;
vector<float>   *jetGenJetEta;
vector<float>   *jetGenJetPhi;
vector<int>     *jetGenPartonID;
vector<float>   *jetGenEn;
vector<float>   *jetGenPt;
vector<float>   *jetGenEta;
vector<float>   *jetGenPhi;
vector<int>     *jetGenPartonMomID;
vector<bool>    *jetPFLooseId;
vector<float>   *jetPUidFullDiscriminant;
vector<float>   *jetJECUnc;
vector<int>     *jetFiredTrgs;
vector<float>   *jetCHF;
vector<float>   *jetNHF;
vector<float>   *jetCEF;
vector<float>   *jetNEF;
vector<int>     *jetNCH;
vector<float>   *jetHFHAE;
vector<float>   *jetHFEME;
vector<int>     *jetNConstituents;
Int_t           nAK8Jet;
vector<float>   *AK8JetPt;
vector<float>   *AK8JetEn;
vector<float>   *AK8JetRawPt;
vector<float>   *AK8JetRawEn;
vector<float>   *AK8JetEta;
vector<float>   *AK8JetPhi;
vector<float>   *AK8JetMass;
vector<float>   *AK8Jet_tau1;
vector<float>   *AK8Jet_tau2;
vector<float>   *AK8Jet_tau3;
vector<float>   *AK8JetCHF;
vector<float>   *AK8JetNHF;
vector<float>   *AK8JetCEF;
vector<float>   *AK8JetNEF;
vector<int>     *AK8JetNCH;
vector<int>     *AK8Jetnconstituents;
vector<bool>    *AK8JetPFLooseId;
vector<float>   *AK8CHSSoftDropJetMass;
vector<float>   *AK8JetpfBoostedDSVBTag;
vector<float>   *AK8JetJECUnc;
vector<int>     *AK8JetPartonID;
vector<int>     *AK8JetGenJetIndex;
vector<float>   *AK8JetGenJetEn;
vector<float>   *AK8JetGenJetPt;
vector<float>   *AK8JetGenJetEta;
vector<float>   *AK8JetGenJetPhi;
vector<int>     *AK8JetGenPartonID;
vector<float>   *AK8JetGenEn;
vector<float>   *AK8JetGenPt;
vector<float>   *AK8JetGenEta;
vector<float>   *AK8JetGenPhi;
vector<int>     *AK8JetGenPartonMomID;
vector<int>     *nAK8softdropSubjet;
vector<vector<float> > *AK8softdropSubjetPt;
vector<vector<float> > *AK8softdropSubjetEta;
vector<vector<float> > *AK8softdropSubjetPhi;
vector<vector<float> > *AK8softdropSubjetMass;
vector<vector<float> > *AK8softdropSubjetE;
vector<vector<int> > *AK8softdropSubjetCharge;
vector<vector<int> > *AK8softdropSubjetFlavour;
vector<vector<float> > *AK8softdropSubjetCSV;
